     1                                  bits 32
     2                                  global start
     3                                  
     4                                  extern exit, printf, scanf
     5                                  extern A
     6                                  
     7                                  import exit msvcrt.dll
     8                                  import printf msvcrt.dll
     9                                  import scanf msvcrt.dll
    10                                  
    11                                  segment data use32 class=data
    12                                  
    13 00000000 36AB451289674523EE-         sir1 DD 1245AB36h, 23456789h, 1212F1EEh
    13 00000009 F11212             
    14                                      len equ ($-sir1)/4
    15 0000000C 00<rept>                    sir2 times len db 0
    16 0000000F 00<rept>                    sir3 times len db 0
    17 00000012 00000000                    len2 dd 0
    18 00000016 257500                      format db "%u", 0
    19 00000019 00000000                    copy_len2 dd 0
    20 0000001D 00000000                    check_length dd 0
    21 00000021 00<rept>                    string_base_2 times 100 db 0
    22 00000085 256300                      char_space db "%c", 0
    23                                  segment code use32 class=code
    24                                      start:
    25                                      
    26 00000000 68[0C000000]                push dword sir2
    27 00000005 6A03                        push dword len
    28 00000007 68[00000000]                push dword sir1
    29 0000000C E8(00000000)                call A
    30 00000011 83C410                      add ESP, 4*4
    31                                      
    32 00000014 891D[12000000]              mov [len2], EBX
    33                                  
    34 0000001A 8B0D[1D000000]              mov ECX, [check_length]
    35                                      for_every_byte:
    36 00000020 BA00000000                      mov EDX, 0
    37 00000025 8B81[0C000000]                  mov EAX, [sir2 + ECX]
    38 0000002B BB02000000                      mov EBX, 2
    39 00000030 BF00000000                      mov EDI, 0
    40                                          form_base_2:
    41 00000035 F7F3                                div EBX ; EAX = EDX:EAX/EBX , EDX = EDX:EAX%EBX
    42 00000037 8997[21000000]                      mov [string_base_2 + EDI], EDX
    43 0000003D 47                                  inc EDI
    44 0000003E BA00000000                          mov EDX, 0
    45 00000043 83F800                              cmp EAX, 0
    46 00000046 75ED                                jne form_base_2
    47 00000048 4F                              dec EDI
    48                                          print_in_base_2:
    49 00000049 B800000000                          mov EAX, 0
    50 0000004E 8A87[21000000]                      mov AL, [string_base_2 + EDI]
    51 00000054 50                                  push dword EAX
    52 00000055 68[16000000]                        push dword format
    53 0000005A FF15[00000000]                      call [printf]
    54 00000060 83C408                              add ESP, 4*2
    55 00000063 4F                                  dec EDI
    56 00000064 83FF00                              cmp EDI, 0
    57 00000067 75E0                                jne print_in_base_2
    58                                              
    59 00000069 6A20                                push dword " "
    60 0000006B 68[85000000]                        push dword char_space
    61 00000070 FF15[00000000]                      call [printf]
    62 00000076 83C408                              add ESP, 4*2
    63                                          
    64 00000079 41                              inc ECX
    65 0000007A 3B0D[12000000]                  cmp ECX, [len2]
    66 00000080 759E                        jne for_every_byte
    67                                      
    68 00000082 6A00                        push dword 0
    69 00000084 FF15[00000000]              call [exit]
