     1                                  bits 32
     2                                  
     3                                  global start
     4                                  
     5                                  extern exit, gets, printf, scanf
     6                                  
     7                                  import exit msvcrt.dll
     8                                  import printf msvcrt.dll
     9                                  import gets msvcrt.dll
    10                                  import scanf msvcrt.dll
    11                                  
    12                                  segment data use32 class=data
    13                                  
    14 00000000 68656C6C6F                  b db 'hello'
    15                                      a equ $-b
    16 00000005 68656C6C6F                  d db 'h', 'e', 'l', 'l', 'o'
    17                                      e equ $-d
    18                                      len equ 100
    19 0000000A 00<rept>                    sir1 times len db 0
    20 0000006E 00<rept>                    sir2 times len db 0
    21 000000D2 00<rept>                    sir3 times len db 0
    22 00000136 256300                      format db "%c", 0
    23 00000139 00                          character1 db 0
    24                                  
    25                                  segment code use32 class=code
    26                                      start:
    27 00000000 A105000000                  mov EAX, [a]
    28                                      ;mov EBX, [c]
    29 00000005 8B0D05000000                mov ECX, [e]
    30                                      ;mov ED
    31                                      
    32                                      
    33 0000000B BF[0A000000]                mov EDI, sir1
    34 00000010 B964000000                  mov ECX, len
    35                                      repeat_reading1:
    36                                          ;scanf(format, character1)
    37 00000015 68[39010000]                    push dword character1
    38 0000001A 68[36010000]                    push dword format
    39 0000001F FF15[00000000]                  call [scanf]
    40 00000025 83C408                          add ESP, 4*2
    41 00000028 83F800                          cmp EAX, 0
    42 0000002B 7403                        je end_1
    43 0000002D AA                          stosb
    44 0000002E 75E5                        jne repeat_reading1
    45                                      
    46                                      end_1:
    47                                      
    48 00000030 BF[6E000000]                mov EDI, sir2
    49 00000035 B964000000                  mov ECX, len
    50                                      repeat_reading2:
    51                                          ;scanf(format, character1)
    52 0000003A 68[39010000]                    push dword character1
    53 0000003F 68[36010000]                    push dword format
    54 00000044 FF15[00000000]                  call [scanf]
    55 0000004A 83C408                          add ESP, 4*2
    56 0000004D 83F800                          cmp EAX, 0
    57 00000050 7403                        je end_2
    58 00000052 AA                          stosb
    59 00000053 75E5                        jne repeat_reading2
    60                                      
    61                                      end_2:
    62                                      
    63 00000055 BF[D2000000]                mov EDI, sir3
    64 0000005A B964000000                  mov ECX, len
    65                                      repeat_reading3:
    66                                          ;scanf(format, character1)
    67 0000005F 68[39010000]                    push dword character1
    68 00000064 68[36010000]                    push dword format
    69 00000069 FF15[00000000]                  call[scanf]
    70 0000006F 83C408                          add ESP, 4*2
    71 00000072 83F800                          cmp EAX, 0
    72 00000075 7403                        je end_3
    73 00000077 AA                          stosb
    74 00000078 75E5                        jne repeat_reading3
    75                                          
    76                                  
    77                                      
    78                                      end_3:
    79 0000007A 6A00                        push dword 0
    80 0000007C FF15[00000000]              call [exit]
