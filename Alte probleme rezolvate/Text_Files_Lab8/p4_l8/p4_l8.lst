     1                                  bits 32
     2                                  
     3                                  global start
     4                                  
     5                                  extern exit, printf, scanf, fread, fopen
     6                                  import exit msvcrt.dll
     7                                  import printf msvcrt.dll
     8                                  import scanf msvcrt.dll
     9                                  import gets msvcrt.dll
    10                                  import fread msvcrt.dll
    11                                  import fopen msvcrt.dll
    12                                  
    13                                  
    14                                  segment data use32 class=data
    15 00000000 FF                          file_descriptor db -1
    16 00000001 696E7075742E747874-         file_name db "input.txt", 0
    16 0000000A 00                 
    17 0000000B 7200                        access_mode db "r", 0
    18 0000000D 546865206E756D6265-         format db "The number of even digits is: %d", 0
    18 00000016 72206F66206576656E-
    18 0000001F 206469676974732069-
    18 00000028 733A20256400       
    19 0000002E 00<rept>                    input_text times 100 db 0
    20                                      len equ 100
    21 00000092 00000000                    counter dd 0
    22                                      
    23                                  segment code use32 class=code
    24                                      start:
    25                                          ;fopen(file_name, access_mode)
    26 00000000 68[0B000000]                    push access_mode
    27 00000005 68[01000000]                    push file_name
    28 0000000A FF15[00000000]                  call [fopen]
    29 00000010 83C408                          add ESP, 4*2
    30                                          
    31 00000013 83F800                          cmp EAX, 0
    32 00000016 745E                            je final
    33 00000018 A3[00000000]                    mov [file_descriptor], EAX
    34                                          
    35                                          repeat_reading:
    36                                              ;fread(input_text, 1, len, file_descriptor)
    37 0000001D FF35[00000000]                      push dword [file_descriptor]
    38 00000023 6A64                                push dword len
    39 00000025 6A01                                push dword 1
    40 00000027 68[2E000000]                        push input_text
    41 0000002C FF15[00000000]                      call [fread]
    42                                              
    43 00000032 83F800                              cmp EAX, 0
    44 00000035 742B                                je end_of_reading
    45                                              
    46 00000037 BE[2E000000]                        mov ESI, input_text
    47 0000003C 89C1                                mov ECX, EAX
    48                                              for_every_character:
    49 0000003E AC                                      lodsb
    50 0000003F 3C30                                    cmp AL, 30h
    51 00000041 7D02                                    jge go_further
    52 00000043 7219                                    jb not_a_digit
    53                                                  go_further:
    54 00000045 3C39                                        cmp AL, 39h
    55 00000047 7602                                        jbe digit_found
    56 00000049 7F13                                        jg not_a_digit
    57                                                  digit_found:
    58 0000004B 6698                                    cbw
    59 0000004D B302                                    mov BL, 2
    60 0000004F F6FB                                    idiv BL
    61 00000051 80FC01                                  cmp AH, 1
    62 00000054 7408                                    je not_even_digit
    63 00000056 7500                                    jne even_digit
    64                                                  
    65                                                  even_digit:
    66 00000058 FF05[92000000]                          inc dword[counter]
    67                                                  
    68                                              not_even_digit:
    69                                              not_a_digit:
    70 0000005E E2DE                                loop for_every_character
    71 00000060 EBBB                           jmp repeat_reading
    72                                         
    73                                      end_of_reading:    
    74                                      
    75                                      ;printf(format, counter)
    76 00000062 FF35[92000000]              push dword [counter]
    77 00000068 68[0D000000]                push dword format
    78 0000006D FF15[00000000]              call [printf]
    79 00000073 83C408                      add ESP, 4*2
    80                                      
    81                                      final:
    82 00000076 6A00                        push dword 0
    83 00000078 FF15[00000000]              call [exit]
